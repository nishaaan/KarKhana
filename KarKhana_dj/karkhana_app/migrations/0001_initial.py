# Generated by Django 5.0 on 2023-12-06 08:25

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='VendorBusinessDetails',
            fields=[
                ('vendor_email', models.CharField(blank=True, max_length=50)),
                ('vendor_BusinessName', models.CharField(blank=True, max_length=50)),
                ('vendor_phoneNumber', models.CharField(blank=True, max_length=50)),
                ('vendor_Location', models.CharField(blank=True, max_length=50)),
                ('vendor_id', models.IntegerField(default='0000', primary_key=True, serialize=False)),
                ('vendor_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('vendor_about', models.TextField(blank=True)),
                ('vendor_opening_days', models.CharField(blank=True, max_length=12)),
                ('vendor_opening_time', models.CharField(blank=True, max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='VendorRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_email', models.CharField(blank=True, max_length=50)),
                ('vendor_BusinessName', models.CharField(blank=True, max_length=50)),
                ('vendor_phoneNumber', models.CharField(blank=True, max_length=50)),
                ('vendor_Location', models.CharField(blank=True, max_length=50)),
                ('vendor_about', models.TextField(blank=True)),
                ('vendor_opening_days', models.CharField(blank=True, max_length=12)),
                ('vendor_opening_time', models.CharField(blank=True, max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.IntegerField(choices=[(1, 'Customer'), (2, 'Vendor')], default=1)),
                ('username', models.CharField(max_length=55)),
                ('full_name', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('phonenumber', models.CharField(blank=True, max_length=100)),
                ('vendor_about', models.TextField(blank=True)),
                ('vendor_opening_days', models.CharField(blank=True, max_length=12)),
                ('vendor_opening_time', models.CharField(blank=True, max_length=12)),
                ('groups', models.ManyToManyField(related_name='karkhana_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='karkhana_users_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
